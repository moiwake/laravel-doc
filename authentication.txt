https://readouble.com/laravel/11.x/ja/authentication.html

🟡認証
認証は「ガード」と「プロバイダ」という2つの主要なコンポーネントで構成される。

ガード：ユーザーをどのように認証するかを定義（例：セッションやトークン）。
プロバイダ：データベースなどからユーザー情報を取得する方法を定義。



🔵設定
config/auth.php



🔵デフォルト
App\Models\Userモデルを使用し、認証に必要なデータベース構造（例：usersテーブル）も用意されている。
　・パスワード列：60文字以上。
　・remember_token列：「持続ログイン（remember me）」機能に必要。



🔵セッション認証
クッキーを使用してユーザーを認証・・・ブラウザにアクセスする時

🔵APIトークン認証
トークンを使用してリモートサービスを認証・・・APIにアクセスする時

ー　認証パッケージ
Laravel Passport：OAuth2を使用した高度なAPI認証。
Laravel Sanctum：シンプルなAPI認証。SPAやモバイルアプリに最適。

❗️Sanctumはセッション認証とAPIトークン認証のハイブリット
Webアプリケーションではセッションクッキーを使用し、APIではトークンを使用する。
→シングルページアプリケーション（SPA）を構築している場合は、Sanctumの使用が推奨される。



🔵ルートに認証を適用する

🟢authミドルウェア
セッションベースの認証

Route::get('/dashboard', function () {
    // 認証済みユーザーのみアクセス可能
})->middleware('auth');

ー　動作
1.ユーザーがログインしているかどうかを確認する。
2.ログインしていない場合、デフォルトで/loginルートにリダイレクトする。



🟢auth.basicミドルウェア
HTTP基本認証を使用し、リクエストごとに認証を行う。

ー　動作
1.ブラウザが自動的にログイン情報（ユーザー名とパスワード）の入力を求める。（専用のログインページを必要としない。）
2.ユーザー名とパスワードが正しい場合、認証が成功する。
3.認証に失敗した場合、401エラーを返し、ブラウザがログイン情報を再入力するポップアップを表示する。



🔵認証をカスタマイズする
「ユーザーを手作業で認証する」



🔵パスワードリセット
https://readouble.com/laravel/11.x/ja/passwords.html
